---
interface Props {
  title: string;
}

const { title } = Astro.props;

const features = [
  {
    icon: 'users',
    title: 'Developer as Architect',
    description:
      'Focus on design decisions and system architecture while AI handles implementation details.',
  },
  {
    icon: 'shield',
    title: 'Governed Autonomy',
    description: 'AI agents operate within clear boundaries, permissions, and approval gates.',
  },
  {
    icon: 'check-circle',
    title: 'Evidence-Based',
    description: 'Every change comes with tests, diffs, and verification artifacts.',
  },
  {
    icon: 'repeat',
    title: 'Iterative Process',
    description: 'Agents learn from feedback and self-correct based on test results.',
  },
  {
    icon: 'layers',
    title: 'Multiple Autonomy Levels',
    description: 'Scale from suggestions (L0) to monitored production deployment (L5).',
  },
  {
    icon: 'trending-up',
    title: 'Production Quality',
    description: 'Maintain high standards with mandatory reviews and automated gates.',
  },
];
---

<section class="py-20 md:py-32 bg-gray-50">
  <div class="container mx-auto px-4 md:px-6 max-w-7xl">
    <div class="text-center max-w-3xl mx-auto mb-16">
      <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
        {title}
      </h2>
      <p class="text-lg text-gray-600">
        A disciplined approach that combines human strategy with AI tactical execution
      </p>
    </div>

    <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
      {
        features.map((feature) => (
          <div class="bg-white rounded-xl p-6 shadow-sm hover:shadow-md transition-shadow">
            <div class="w-12 h-12 bg-indigo-100 rounded-lg flex items-center justify-center mb-4">
              {feature.icon === 'users' && (
                <svg
                  class="w-5 h-5 text-indigo-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"
                  />
                </svg>
              )}
              {feature.icon === 'shield' && (
                <svg
                  class="w-5 h-5 text-indigo-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"
                  />
                </svg>
              )}
              {feature.icon === 'check-circle' && (
                <svg
                  class="w-5 h-5 text-indigo-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
                  />
                </svg>
              )}
              {feature.icon === 'repeat' && (
                <svg
                  class="w-5 h-5 text-indigo-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                  />
                </svg>
              )}
              {feature.icon === 'layers' && (
                <svg
                  class="w-5 h-5 text-indigo-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4"
                  />
                </svg>
              )}
              {feature.icon === 'trending-up' && (
                <svg
                  class="w-5 h-5 text-indigo-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"
                  />
                </svg>
              )}
            </div>

            <h3 class="text-lg font-semibold text-gray-900 mb-2">{feature.title}</h3>
            <p class="text-gray-600 text-sm leading-relaxed">{feature.description}</p>
          </div>
        ))
      }
    </div>
  </div>
</section>
