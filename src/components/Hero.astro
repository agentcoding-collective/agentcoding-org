---
interface Props {
  title: string;
  subtitle: string;
  cta: string;
}

const { title, subtitle, cta } = Astro.props;
---

<section class="hero-section relative min-h-screen flex items-center justify-center overflow-hidden">
  <!-- Animated gradient background -->
  <div class="absolute inset-0 bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900"></div>
  
  <!-- Animated mesh gradient overlay -->
  <div class="absolute inset-0 opacity-30">
    <div class="absolute top-0 -left-4 w-72 h-72 bg-purple-500 rounded-full mix-blend-multiply filter blur-xl animate-blob"></div>
    <div class="absolute top-0 -right-4 w-72 h-72 bg-blue-500 rounded-full mix-blend-multiply filter blur-xl animate-blob animation-delay-2000"></div>
    <div class="absolute -bottom-8 left-20 w-72 h-72 bg-pink-500 rounded-full mix-blend-multiply filter blur-xl animate-blob animation-delay-4000"></div>
  </div>
  
  <!-- Content with parallax effect via transform -->
  <div class="hero-content relative z-10 text-center px-6 max-w-5xl mx-auto">
    <div class="space-y-8">
      <h1 class="text-6xl md:text-8xl font-bold text-white leading-tight tracking-tight">
        {title}
      </h1>
      <p class="text-xl md:text-3xl text-gray-300 font-light max-w-3xl mx-auto">
        {subtitle}
      </p>
      <div class="pt-4">
        <a 
          href="#cta" 
          class="inline-flex items-center gap-2 bg-white text-slate-900 px-8 py-4 rounded-full font-semibold text-lg hover:bg-gray-100 transition-all hover:scale-105 hover:shadow-2xl shadow-lg"
        >
          {cta}
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
          </svg>
        </a>
      </div>
    </div>
  </div>
  
  <!-- Scroll indicator -->
  <div class="absolute bottom-8 left-1/2 -translate-x-1/2 z-10 animate-bounce">
    <svg class="w-6 h-6 text-white/60" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
    </svg>
  </div>
</section>

<style>
  @keyframes blob {
    0%, 100% {
      transform: translate(0, 0) scale(1);
    }
    33% {
      transform: translate(30px, -50px) scale(1.1);
    }
    66% {
      transform: translate(-20px, 20px) scale(0.9);
    }
  }
  
  .animate-blob {
    animation: blob 7s infinite;
  }
  
  .animation-delay-2000 {
    animation-delay: 2s;
  }
  
  .animation-delay-4000 {
    animation-delay: 4s;
  }
  
  /* Parallax effect on scroll - smoother with CSS */
  .hero-content {
    transform: translateY(0);
    transition: transform 0.1s ease-out;
  }
</style>

<script>
  // Simple parallax effect using scroll position
  window.addEventListener('scroll', () => {
    const hero = document.querySelector('.hero-content') as HTMLElement;
    if (hero) {
      const scrolled = window.pageYOffset;
      const rate = scrolled * 0.3;
      hero.style.transform = `translateY(${rate}px)`;
    }
  });
</script>
