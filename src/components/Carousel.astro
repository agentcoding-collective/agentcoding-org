---
interface Props {
  title: string;
  slides: readonly { title: string; desc: string }[] | Array<{ title: string; desc: string }>;
}

const { title, slides } = Astro.props;
---

<section class="py-24 bg-white">
  <div class="max-w-5xl mx-auto px-6">
    <div class="text-center mb-16">
      <h2 class="text-4xl font-bold text-gray-900 mb-4">{title}</h2>
      <p class="text-lg text-gray-600">Guiding values of the Agent Coding methodology</p>
    </div>

    <div class="carousel-container">
      <div
        class="bg-gray-50 rounded-2xl p-12 min-h-[280px] flex flex-col justify-center carousel-content"
      >
        {
          slides.map((slide, index) => (
            <div
              class="carousel-slide"
              data-index={index}
              style={index === 0 ? 'display: flex;' : 'display: none;'}
            >
              <div class="flex items-center gap-3 mb-6">
                <div class="w-10 h-10 bg-indigo-600 text-white rounded-lg flex items-center justify-center font-bold text-sm">
                  {index + 1}
                </div>
                <h3 class="text-2xl font-bold text-gray-900">{slide.title}</h3>
              </div>
              <p class="text-lg text-gray-600 leading-relaxed">{slide.desc}</p>
            </div>
          ))
        }
      </div>

      <div class="flex justify-center gap-2 mt-8 carousel-dots">
        {
          slides.map((_, index) => (
            <button
              class={`carousel-dot h-2 rounded-full transition-all ${index === 0 ? 'w-8 bg-indigo-600' : 'w-2 bg-gray-300 hover:bg-gray-400'}`}
              data-index={index}
            />
          ))
        }
      </div>
    </div>
  </div>
</section>

<script>
  let currentSlide = 0;
  let autoplayInterval: number;

  function showSlide(index: number) {
    const slides = document.querySelectorAll('.carousel-slide') as NodeListOf<HTMLElement>;
    const dots = document.querySelectorAll('.carousel-dot');

    slides.forEach((slide) => {
      slide.style.display = 'none';
    });

    dots.forEach((dot) => {
      dot.classList.remove('w-8', 'bg-indigo-600');
      dot.classList.add('w-2', 'bg-gray-300');
    });

    if (slides[index]) {
      slides[index].style.display = 'flex';
      slides[index].style.flexDirection = 'column';
    }

    if (dots[index]) {
      dots[index].classList.remove('w-2', 'bg-gray-300');
      dots[index].classList.add('w-8', 'bg-indigo-600');
    }

    currentSlide = index;
  }

  function nextSlide() {
    const slides = document.querySelectorAll('.carousel-slide');
    currentSlide = (currentSlide + 1) % slides.length;
    showSlide(currentSlide);
  }

  function startAutoplay() {
    autoplayInterval = window.setInterval(nextSlide, 5000);
  }

  function stopAutoplay() {
    if (autoplayInterval) {
      clearInterval(autoplayInterval);
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    const dots = document.querySelectorAll('.carousel-dot');
    dots.forEach((dot) => {
      dot.addEventListener('click', (e) => {
        const index = parseInt((e.target as HTMLElement).dataset.index || '0');
        showSlide(index);
        stopAutoplay();
        startAutoplay();
      });
    });

    startAutoplay();
  });
</script>
